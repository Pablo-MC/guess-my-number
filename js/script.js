'use strict';

// IMPORTANTE: las variables secretNumber, score y highscore se denominan 'variables de estado', ya que Ã©stas variables son parte del 'estado de la aplicaciÃ³n', por eso SIEMPRE es bueno declarar variables que contengan los valores que sean relevantes de la aplicaciÃ³n para que siempre esten disponibles en nuestro cÃ³digo y no que dependan solo del DOM.

const displayMessage = message => document.querySelector('.message').textContent = message;
const displaySecretNumber = nro => document.querySelector('.number').textContent = nro;
const hideSecretNumber = () => document.querySelector('.number').textContent = '?';
const setScore = score => document.querySelector('.score').textContent = score;
const setHighscore = value => document.querySelector('.highscore').textContent = value;
const setInputValue = value => document.querySelector('.guess').value = value;
const getInputValue = () => document.querySelector('.guess').value;
const changeBoxWidth = value => document.querySelector('.number').style.width = value;
const changeBackgroundColor = color => document.querySelector('body').style.backgroundColor = color;

let secretNumber, score, highscore;

secretNumber = Math.trunc(Math.random() * 20) + 1; // NÃºmero aleatorio entre 1 y 20.
score = 20;
highscore = 0;

document.querySelector('.check').addEventListener('click', function () {

   const guess = Number(getInputValue());

   // Cuando no se ingresa un valor de entrada.
   if (!guess) {
      displayMessage('â›” No Number!');

      // Cuando se adivina el nÃºmero secreto. 
   } else if (guess === secretNumber) {
      if (score > highscore) {
         highscore = score;
         setHighscore(highscore);
      }

      displayMessage('ðŸŽ‰ Correct Number!');
      changeBackgroundColor('#60b347');
      changeBoxWidth('30rem');
      displaySecretNumber(secretNumber);
      setScore(score);

      // Cuando no se adivina el nÃºmero secreto.  
   } else if (guess !== secretNumber) {
      if (score > 1) {
         score--;
         displayMessage(guess > secretNumber ? 'ðŸ“ˆ Too high!' : 'ðŸ“‰ Too low!');
         setScore(score);
      } else {
         displayMessage('ðŸ’¥ You lost the game!');
         setScore(0);
      }
   }
});

document.querySelector('.again').addEventListener('click', function () {
   secretNumber = Math.trunc(Math.random() * 20) + 1;
   score = 20;

   displayMessage('Start guessing...');
   changeBackgroundColor('#222');
   changeBoxWidth('15rem');
   hideSecretNumber();
   setInputValue('');
   setScore(score);
});


/*

. RECOMENDACIÃ“N: Generalmente en una aplicaciÃ³n que tiene un valor de entrada (input), lo primero que debemos hacer es verificar si el usuario realmente ingresÃ³ algun valor y en caso de que no lo haya hecho debemos responder a eso de alguna manera, en este caso enviando un mensaje: 'â›” No Number!'.

OBS: Un valor de entrada vacio es un string vacio (''). En caso de convertirlo en tipo de dato number retorna un 0. Por lo tanto cualquiera de ambos valores dentro de una expresiÃ³n lÃ³gica literal se evalÃºan como un falsy value.

*/